{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","img/avatar2.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/MyProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/MyProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","classes","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","MyProfileInfo","profile_info","description","userPhoto","src","photos","large","alt","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","item","postUserPhoto","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","Field","name","component","validate","required","placeholder","MyPosts","React","memo","postsElements","postsData","reverse","post","id","my_posts","values","addPost","newPostText","posts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","MyProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.c8a916a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__-dBGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__gkcSg\",\"posts\":\"MyPosts_posts__AiHup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Wh98\"};","module.exports = __webpack_public_path__ + \"static/media/avatar2.a9a175d4.jpg\";","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        {!editMode && (\r\n          <div>\r\n            <b>Status: </b><span onDoubleClick={activateEditMode} >\r\n              {props.status || '------'}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {editMode && (\r\n          <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport s from \"../../common/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <button>save</button>\r\n        </div>\r\n        {error && (\r\n        <div className={s.formSummaryError}>{error}</div>\r\n      )}\r\n\r\n      <div>\r\n        <b>Full name</b>: {createField('Full name', 'fullname', [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {createField('', 'lookingForAJob', [], Input, {type:'checkbox'}) }\r\n      </div>\r\n        <div>\r\n          <b>My professional skills</b>: {createField('My professional skills', 'lookingForAJobDescription', [], Textarea) }\r\n        </div>\r\n      <div>\r\n        <b>About me</b>: {createField('About me', 'aboutMe', [], Textarea) }\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div className={classes.contact} key={key}>\r\n<b>{key}: {createField(key, 'contacts.'+key, [], Input) }</b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader.js\";\r\nimport userPhoto from \"../../../img/avatar3.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst MyProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then (\r\n      () => {\r\n        setEditMode(false)\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.profile_info}>\r\n      <div className={classes.description}>\r\n        <img\r\n          className={classes.userPhoto}\r\n          src={props.profile.photos.large || userPhoto}\r\n          alt=\"profile img\"\r\n        />\r\n        {props.isOwner && <input type={\"file\"} onChange={onPhotoSelected} />}\r\n\r\n        {editMode ? (\r\n          <ProfileDataForm initialValues={props.profile}  profile={props.profile} onSubmit={onSubmit} />\r\n        ) : (\r\n          <ProfileData goToEditMode={()=>{setEditMode(true)}} profile={props.profile} isOwner={props.isOwner} />\r\n        )}\r\n\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contact}>\r\n      <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileInfo;\r\n","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport postUserPhoto from '../../../../img/avatar2.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <div className = {classes.item}>\r\n        <img src={ postUserPhoto\r\n          // require('../../../../img/avatar2.jpg')\r\n          } alt=\"\"/>\r\n        <div>{props.message}</div>\r\n        <div>Like {props.likesCount}</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} placeholder='Post message' />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddNewPostForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements =[...props.postsData]\r\n  .reverse()\r\n  .map((post) => (\r\n    <Post key={post.id} message={post.message} likesCount={post.likesCount} />\r\n  ));\r\n\r\n  // let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.my_posts}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyProfileInfo from \"./ProfileInfo/MyProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <main className={classes.profile}>\r\n      <MyProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass MyProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(MyProfileContainer);\r\n"],"sourceRoot":""}